/* Generated by SharpKit 5 v5.2.9 */
if (typeof($CreateException)=='undefined') 
{
    var $CreateException = function(ex, error) 
    {
        if(error==null)
            error = new Error();
        if(ex==null)
            ex = new System.Exception.ctor();       
        error.message = ex.message;
        for (var p in ex)
           error[p] = ex[p];
        return error;
    }
}
if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$ObjectBuilder$Client$DependencyContainer =
{
    fullname: "Neptuo.ObjectBuilder.Client.DependencyContainer",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.ObjectBuilder.Client",
    interfaceNames: ["Neptuo.IDependencyContainer"],
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            System.Object.ctor.call(this);
        },
        RegisterInstance: function (t, name, instance)
        {
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        },
        RegisterType: function (from, to, name, lifetime)
        {
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        },
        CreateChildContainer: function ()
        {
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        },
        Resolve: function (t, name)
        {
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        },
        ResolveAll: function (t)
        {
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        }
    },
    ctors: [ {name: "ctor", parameters: []}],
    IsAbstract: false
};
JsTypes.push(Neptuo$ObjectBuilder$Client$DependencyContainer);
